# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget VGio::VGio VGio::VGio_static)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target VGio::VGio
add_library(VGio::VGio SHARED IMPORTED)

set_target_properties(VGio::VGio PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_14"
  INTERFACE_INCLUDE_DIRECTORIES "/home/projects2/vgan_ancient/THIRD_VERSION/SAFARI/deps/libvgio/include;/home/projects2/vgan_ancient/THIRD_VERSION/SAFARI/deps/libvgio/build-vg;/net/mimer/mnt/tank/projects2/vgan_ancient/THIRD_VERSION/SAFARI/include;/usr/include;/usr/include;/home/projects2/vgan_ancient/THIRD_VERSION/SAFARI/deps/libvgio/build-vg/handlegraph-prefix/include"
  INTERFACE_LINK_DIRECTORIES "/net/mimer/mnt/tank/projects2/vgan_ancient/THIRD_VERSION/SAFARI/lib"
  INTERFACE_LINK_LIBRARIES "/usr/lib/x86_64-linux-gnu/libprotobuf.so;Threads::Threads;hts;jansson;/home/projects2/vgan_ancient/THIRD_VERSION/SAFARI/deps/libvgio/build-vg/handlegraph-prefix/lib/libhandlegraph.so;OpenMP::OpenMP_CXX"
)

# Create imported target VGio::VGio_static
add_library(VGio::VGio_static STATIC IMPORTED)

set_target_properties(VGio::VGio_static PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_14"
  INTERFACE_INCLUDE_DIRECTORIES "/home/projects2/vgan_ancient/THIRD_VERSION/SAFARI/deps/libvgio/include;/home/projects2/vgan_ancient/THIRD_VERSION/SAFARI/deps/libvgio/build-vg;/net/mimer/mnt/tank/projects2/vgan_ancient/THIRD_VERSION/SAFARI/include;/usr/include;/usr/include;/home/projects2/vgan_ancient/THIRD_VERSION/SAFARI/deps/libvgio/build-vg/handlegraph-prefix/include"
  INTERFACE_LINK_DIRECTORIES "/net/mimer/mnt/tank/projects2/vgan_ancient/THIRD_VERSION/SAFARI/lib"
  INTERFACE_LINK_LIBRARIES "/usr/lib/x86_64-linux-gnu/libprotobuf.a;Threads::Threads;hts;bz2;deflate;hts;m;pthread;z;lzma;jansson;/home/projects2/vgan_ancient/THIRD_VERSION/SAFARI/deps/libvgio/build-vg/handlegraph-prefix/lib/libhandlegraph.a;OpenMP::OpenMP_CXX"
)

# Import target "VGio::VGio" for configuration ""
set_property(TARGET VGio::VGio APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(VGio::VGio PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/projects2/vgan_ancient/THIRD_VERSION/SAFARI/deps/libvgio/build-vg/libvgio.so"
  IMPORTED_SONAME_NOCONFIG "libvgio.so"
  )

# Import target "VGio::VGio_static" for configuration ""
set_property(TARGET VGio::VGio_static APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(VGio::VGio_static PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_NOCONFIG "CXX"
  IMPORTED_LOCATION_NOCONFIG "/home/projects2/vgan_ancient/THIRD_VERSION/SAFARI/deps/libvgio/build-vg/libvgio.a"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
